name: Terraform deploy

on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
      role-to-assume:
        required: true
        type: string
      backend-config:
        required: true
        type: string
      args:
        required: true
        type: string

permissions:
  id-token: write
  contents: read

concurrency: build-deploy

jobs:
  terraform-deploy-stg:
    if: github.ref == 'refs/heads/main'
    name: terraform init and plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: deploy
          role-skip-session-tagging: true

      - name: Terraform init
        run: terraform init -backend-config="${{ inputs.backend-config }}"
        working-directory: ./services/api/iac

      - name: Terraform Plan
        run: terraform plan ${{ inputs.args }}
        working-directory: ./services/api/iac

      - name: Terraform Apply
        run: terraform apply ${{ inputs.args }} -auto-approve
        working-directory: ./services/api/iac
        env:
          TF_VAR_image_tag: ${{ needs.build-image.outputs.image_tag }}

  terraform-plan-prod:
    if: github.ref == 'refs/heads/main'
    name: terraform init and plan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: deploy
          role-skip-session-tagging: true

      - name: Terraform init
        run: terraform init -backend-config="${{ inputs.backend-config }}"
        working-directory: ./services/api/iac

      - name: Terraform Plan
        run: terraform plan ${{ inputs.args }}
        working-directory: ./services/api/iac

  terraform-deploy-prod:
    if: github.ref == 'refs/heads/release/v*'
    runs-on: ubuntu-latest
    name: terraform deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ inputs.aws-region }}
          role-to-assume: ${{ inputs.role-to-assume }}
          role-session-name: deploy
          role-skip-session-tagging: true

      - name: Terraform init
        run: terraform init -backend-config="${{ inputs.backend-config }}"
        working-directory: ./services/api/iac

      - name: Terraform Apply
        run: terraform apply ${{ inputs.args }} -auto-approve
        working-directory: ./services/api/iac
        env:
          TF_VAR_image_tag: ${{ needs.build-image.outputs.image_tag }}
